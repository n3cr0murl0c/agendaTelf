name: Python CI Pipeline

on:
    push:
        branches: [main, develop, feature/*]
    pull_request:
        branches: [main, develop]

jobs:
    test:
        runs-on: ubuntu-latest

        strategy:
            matrix:
                python-version: ["3.9", "3.10", "3.11"]

        steps:
            - name: 📥 Checkout código
              uses: actions/checkout@v3

            - name: 🐍 Configurar Python ${{ matrix.python-version }}
              uses: actions/setup-python@v4
              with:
                  python-version: ${{ matrix.python-version }}
                  cache: "pip"

            - name: 📦 Instalar dependencias
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install -r requirements-dev.txt

            - name: 🎨 Verificar estilo de código con flake8
              run: |
                  # Detener el build si hay errores de sintaxis o nombres indefinidos
                  flake8 src/ --count --select=E9,F63,F7,F82 --show-source --statistics
                  # Verificaciones de estilo (warnings)
                  flake8 src/ --count --max-complexity=10 --max-line-length=88 --statistics
              continue-on-error: false

            - name: 🧪 Ejecutar pruebas con pytest
              run: |
                  pytest tests/ -v --tb=short

            - name: 📊 Generar reporte de cobertura
              run: |
                  coverage run -m pytest tests/
                  coverage report -m
                  coverage html

            - name: 📈 Verificar cobertura mínima
              run: |
                  coverage report --fail-under=80

            - name: 📤 Subir reporte de cobertura como artefacto
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: coverage-report-${{ matrix.python-version }}
                  path: htmlcov/
                  retention-days: 30

            - name: 📤 Subir resultados de pruebas
              if: always()
              uses: actions/upload-artifact@v3
              with:
                  name: test-results-${{ matrix.python-version }}
                  path: |
                      .coverage
                      htmlcov/
                  retention-days: 30

    lint-advanced:
        runs-on: ubuntu-latest

        steps:
            - name: 📥 Checkout código
              uses: actions/checkout@v3

            - name: 🐍 Configurar Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"

            - name: 📦 Instalar pylint
              run: |
                  pip install pylint

            - name: 🔍 Análisis con pylint
              run: |
                  pylint src/ --fail-under=8.0 || true
              continue-on-error: true

    security:
        runs-on: ubuntu-latest

        steps:
            - name: 📥 Checkout código
              uses: actions/checkout@v3

            - name: 🐍 Configurar Python
              uses: actions/setup-python@v4
              with:
                  python-version: "3.9"

            - name: 🔒 Verificar vulnerabilidades con safety
              run: |
                  pip install safety
                  safety check || true
              continue-on-error: true
